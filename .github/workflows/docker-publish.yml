name: Docker

on:
  schedule:
    - cron: '17 3 * * *'
  push:
    branches:
      - "main"
      - "feature/standard-deployment"
    # Trigger builds for semver tags and for a "dev" tag.
    tags: [ 'v*.*.*', 'dev' ]
  pull_request:
    branches:
      - "main"
      - "feature/standard-deployment"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PRs
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      # Set up Docker Buildx for multi-platform builds and caching.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      # Log into the Docker registry (skipped for PRs)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for the Backend Docker image.
      - name: Extract Backend Docker metadata
        id: meta-backend
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          tags: |
            # Semver tags.
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Branch-based and PR tags.
            type=ref,event=branch
            type=ref,event=pr
            # SHA tag.
            type=sha
            # Set "latest" only on main.
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Add the "dev" tag for the feature branch or a push of the dev tag.
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/feature/standard-deployment' || github.ref == 'refs/tags/dev' }}

      # Build and push the Backend Docker image.
      - name: Build and push Backend Docker image
        id: build-and-push-backend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          file: ./Dockerfile.backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Extract metadata (tags, labels) for the Frontend Docker image.
      - name: Extract Frontend Docker metadata
        id: meta-frontend
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          tags: |
            # Semver tags.
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Branch-based and PR tags.
            type=ref,event=branch
            type=ref,event=pr
            # SHA tag.
            type=sha
            # Set "latest" only on main.
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Add the "dev" tag for the feature branch or a push of the dev tag.
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/feature/standard-deployment' || github.ref == 'refs/tags/dev' }}

      # Build and push the Frontend Docker image.
      - name: Build and push Frontend Docker image
        id: build-and-push-frontend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the published Backend Docker image (skipped for PRs).
      - name: Sign the published Backend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-backend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-backend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # Sign the published Frontend Docker image (skipped for PRs).
      - name: Sign the published Frontend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-frontend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-frontend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
