# HomelabARR Test Environment Configuration
# This file contains test-specific settings for automated testing and CI/CD
# Used for unit tests, integration tests, and continuous integration

# =============================================================================
# TEST ENVIRONMENT SETTINGS
# =============================================================================

# Test environment mode - enables test-specific behaviors
NODE_ENV=test

# Minimal logging for test performance
LOG_LEVEL=warn

# =============================================================================
# TEST SERVER CONFIGURATION
# =============================================================================

# Test server port - use different port to avoid conflicts
PORT=3002

# Test frontend and backend ports
FRONTEND_PORT=8089
BACKEND_PORT=8090

# Bind to localhost for test isolation
BIND_ADDRESS=127.0.0.1

# =============================================================================
# TEST CORS CONFIGURATION
# =============================================================================

# Permissive CORS for testing
CORS_ORIGIN=*

# =============================================================================
# TEST DOCKER CONFIGURATION
# =============================================================================

# Docker socket for testing - use host socket
DOCKER_SOCKET=/var/run/docker.sock

# Docker group ID for testing
DOCKER_GID=999

# Shorter timeout for faster test execution
DOCKER_TIMEOUT=10000

# =============================================================================
# TEST AUTHENTICATION CONFIGURATION
# =============================================================================

# Disable authentication for most tests
AUTH_ENABLED=false

# Test JWT secret - not for production
JWT_SECRET=test-jwt-secret-not-for-production

# Short token expiration for testing
JWT_EXPIRES_IN=1h

# Test admin password
DEFAULT_ADMIN_PASSWORD=test-admin

# =============================================================================
# TEST SERVICE URLS
# =============================================================================

# Test service URLs
FRONTEND_URL=http://localhost:8089
BACKEND_URL=http://localhost:8090
EXTERNAL_HEALTH_URL=http://localhost:3002/health

# Test database - use in-memory or separate test database
DATABASE_URL=sqlite://:memory:

# Test Redis URL (if needed)
REDIS_URL=redis://localhost:6380

# =============================================================================
# TEST DEBUGGING FEATURES
# =============================================================================

# Enable debug mode for test troubleshooting
DEBUG_MODE=true

# Disable verbose logging for test performance
ENABLE_CORS_LOGGING=false
ENABLE_REQUEST_LOGGING=false
ENABLE_DOCKER_LOGGING=false
DETAILED_LOGGING=false

# =============================================================================
# TEST PERFORMANCE SETTINGS
# =============================================================================

# Fast timeouts for test execution
REQUEST_TIMEOUT=5000
HEALTH_CHECK_TIMEOUT=2000

# Enable health check for integration tests
HEALTH_CHECK_ENABLED=true

# Disable metrics for test performance
METRICS_ENABLED=false

# =============================================================================
# TEST VALIDATION SETTINGS
# =============================================================================

# Enable validation for test reliability
VALIDATE_DOCKER_SOCKET=true
VALIDATE_SERVICE_URLS=false

# =============================================================================
# TEST DATA AND STORAGE
# =============================================================================

# Test data path - use temporary directory
DATA_PATH=/tmp/homelabarr-test

# Test network name
DEFAULT_NETWORK=homelabarr-test

# =============================================================================
# TEST ENVIRONMENT NOTES
# =============================================================================

# TESTING USAGE:
# 1. This file is automatically loaded during test execution
# 2. Use in-memory database for fast, isolated tests
# 3. Different ports prevent conflicts with development environment
# 4. Minimal logging improves test performance
# 5. Permissive settings allow comprehensive testing

# CI/CD INTEGRATION:
# 1. Copy this file to .env.test in CI environment
# 2. Ensure Docker is available in CI environment
# 3. Use test-specific database and Redis instances
# 4. Configure appropriate timeouts for CI performance
# 5. Enable health checks for integration testing

# =============================================================================
# TEST VALIDATION COMMANDS
# =============================================================================

# Validate test environment:
# 1. Check Node.js: node --version
# 2. Check test ports: netstat -tlnp | grep -E ':(3002|8089|8090)'
# 3. Test Docker: docker ps
# 4. Run tests: npm test
# 5. Check health: curl http://localhost:3002/health